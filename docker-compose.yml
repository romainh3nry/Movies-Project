version: '3.9'

services:

  frontend:
    container_name: frontend
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    volumes:
      - './frontend:/frontend'
      - '/frontend/node_modules'
    ports:
      - 3000:3000
    stdin_open: true
    environment:
        - CHOKIDAR_USEPOLLING=true
    command: npm start
    networks:
      - app_network
    depends_on:
      - backend
      - mongodb
      - redis

  backend:
    container_name: backend
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    command: gunicorn backend.wsgi -b 0.0.0.0:8000
    volumes:
      - ./backend:/backend
    ports:
      - 8000:8000
    depends_on:
      - mongodb
      - redis
    networks:
      - app_network

  mongodb:
    image: mongo:5.0
    container_name: mongodb
    ports:
      - 27017:27017
    volumes:
      - ~/apps/mongo:/data/db
      - type: bind
        source: ./data
        target: /src
    networks:
      - app_network

  redis:
    image: redis:7.0.2
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis_data:/var/lib/redis/data/
    environment: 
      - "ALLOW_EMPTY_PASSWORD=yes"
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  redis_data: